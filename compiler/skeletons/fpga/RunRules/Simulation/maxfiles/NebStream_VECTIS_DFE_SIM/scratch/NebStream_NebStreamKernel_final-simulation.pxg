<?xml version="1.0" encoding="UTF-8" ?>
<Graph version="2013.2.2" pxg_version="1" maxfile_name="NebStream" design_name="NebStreamKernel" compilation_phase="final-simulation" has_longest_path="false">
	<Node group="[]" id="1" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounterChain(Count.java:467)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:23)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
		<Value>1</Value>
	</Node>
	<Edge dst_node_id="6" dst_node_input="enable" src_node_id="1" src_node_output="value" />
	<Node group="[]" id="54" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream$OffsetExpr.getDFEVar(Stream.java:176)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:21)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
		<Value>00000001</Value>
	</Node>
	<Edge dst_node_id="6" dst_node_input="max" src_node_id="54" src_node_output="value" />
	<Edge dst_node_id="8" dst_node_input="a" src_node_id="54" src_node_output="value" />
	<Edge dst_node_id="24" dst_node_input="a" src_node_id="54" src_node_output="value" />
	<Node group="[]" id="6" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain.addCounter(CounterChain.java:523)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:26)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="49" dst_node_input="input" src_node_id="6" src_node_output="count" />
	<Edge dst_node_id="5" dst_node_input="enable" src_node_id="6" src_node_output="wrap" />
	<Node group="[]" id="49" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeFIFO">
		<Input name="input" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="1" name="output" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Text>FIFO(1)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:531)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:38)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="25" dst_node_input="a" src_node_id="49" src_node_output="output" />
	<Edge dst_node_id="9" dst_node_input="a" src_node_id="49" src_node_output="output" />
	<Node group="[]" id="61" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:824)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:38)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
		<Value>00000001</Value>
	</Node>
	<Edge dst_node_id="24" dst_node_input="b" src_node_id="61" src_node_output="value" />
	<Node group="[]" id="24" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Input name="b" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:824)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:38)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="25" dst_node_input="b" src_node_id="24" src_node_output="result" />
	<Node group="[]" id="25" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Input name="b" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:531)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:38)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="29" dst_node_input="input" src_node_id="25" src_node_output="result" />
	<Node group="[]" id="29" isControl="false" isVisible="false" pipelineFactor="0.0" type="NodeReinterpret">
		<Input name="input" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="hwBits(1)" />
		<Text>&lt;{HWRawBits:1}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:645)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:38)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="28" dst_node_input="a" src_node_id="29" src_node_output="output" />
	<Node group="[]" id="26" isControl="true" isVisible="false" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="io_output_force_disabled" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>Scalar input (io_output_force_disabled)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:645)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:38)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
		<Name>io_output_force_disabled</Name>
	</Node>
	<Edge dst_node_id="27" dst_node_input="a" src_node_id="26" src_node_output="io_output_force_disabled" />
	<Node group="[]" id="27" isControl="true" isVisible="false" pipelineFactor="0.0" type="NodeNot">
		<Input name="a" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:645)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:38)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="30" dst_node_input="input" src_node_id="27" src_node_output="result" />
	<Node group="[]" id="30" isControl="true" isVisible="false" pipelineFactor="0.0" type="NodeReinterpret">
		<Input name="input" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="hwBits(1)" />
		<Text>&lt;{HWRawBits:1}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:645)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:38)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="28" dst_node_input="b" src_node_id="30" src_node_output="output" />
	<Node group="[]" id="28" isControl="false" isVisible="false" pipelineFactor="0.0" type="NodeAnd">
		<Input name="a" type="hwBits(1)" />
		<Input name="b" type="hwBits(1)" />
		<Output latency="0" name="result" type="hwBits(1)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:645)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:38)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="31" dst_node_input="input" src_node_id="28" src_node_output="result" />
	<Node group="[]" id="31" isControl="false" isVisible="false" pipelineFactor="0.0" type="NodeReinterpret">
		<Input name="input" type="hwBits(1)" />
		<Output latency="0" name="output" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:1, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:645)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:38)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="53" dst_node_input="input" src_node_id="31" src_node_output="output" />
	<Node group="[]" id="53" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeFIFO">
		<Input name="input" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="17" name="output" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>FIFO(17)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:645)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:38)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="32" dst_node_input="output_control" src_node_id="53" src_node_output="output" />
	<Node group="[]" id="60" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwOffsetFix(7, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:7, 0, UNSIGNED}\n0x40; 64.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain.addCounter(CounterChain.java:501)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:25)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
		<Value>1000000</Value>
	</Node>
	<Edge dst_node_id="5" dst_node_input="max" src_node_id="60" src_node_output="value" />
	<Node group="[]" id="5" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="hwOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="hwOffsetFix(6, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain.addCounter(CounterChain.java:501)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:25)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="3" dst_node_input="enable" src_node_id="5" src_node_output="wrap" />
	<Node group="[]" id="59" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwOffsetFix(7, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:7, 0, UNSIGNED}\n0x40; 64.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain.addCounter(CounterChain.java:501)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:24)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
		<Value>1000000</Value>
	</Node>
	<Edge dst_node_id="3" dst_node_input="max" src_node_id="59" src_node_output="value" />
	<Node group="[]" id="3" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="hwOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="hwOffsetFix(6, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain.addCounter(CounterChain.java:501)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:24)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="18" dst_node_input="a" src_node_id="3" src_node_output="count" />
	<Node group="[]" id="58" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwOffsetFix(6, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:6, 0, UNSIGNED}\n0x00; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:543)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:31)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
		<Value>000000</Value>
	</Node>
	<Edge dst_node_id="18" dst_node_input="b" src_node_id="58" src_node_output="value" />
	<Node group="[]" id="18" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="hwOffsetFix(6, 0, UNSIGNED)" />
		<Input name="b" type="hwOffsetFix(6, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:543)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:31)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="20" dst_node_input="sel" src_node_id="18" src_node_output="result" />
	<Node group="[]" id="48" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="hwFloat(8, 24)" />
		<Output latency="-64" name="output" type="hwFloat(8, 24)" />
		<Text>stream offset: -64</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:259)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:36)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="50" dst_node_input="input" src_node_id="48" src_node_output="output" />
	<Node group="[]" id="50" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeFIFO">
		<Input name="input" type="hwFloat(8, 24)" />
		<Output latency="46" name="output" type="hwFloat(8, 24)" />
		<Text>FIFO(46)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1038)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:31)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="20" dst_node_input="option0" src_node_id="50" src_node_output="output" />
	<Node group="[]" id="19" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x42c80000; 100.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1038)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:31)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
		<Value>01000010110010000000000000000000</Value>
	</Node>
	<Edge dst_node_id="20" dst_node_input="option1" src_node_id="19" src_node_output="value" />
	<Node group="[]" id="20" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="hwFloat(8, 24)" />
		<Input name="option1" type="hwFloat(8, 24)" />
		<Output latency="1" name="result" type="hwFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1038)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:31)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="52" dst_node_input="input" src_node_id="20" src_node_output="result" />
	<Node group="[]" id="52" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeFIFO">
		<Input name="input" type="hwFloat(8, 24)" />
		<Output latency="5" name="output" type="hwFloat(8, 24)" />
		<Text>FIFO(5)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:775)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:33)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="21" dst_node_input="a" src_node_id="52" src_node_output="output" />
	<Node group="[]" id="57" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:824)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:28)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
		<Value>00000001</Value>
	</Node>
	<Edge dst_node_id="8" dst_node_input="b" src_node_id="57" src_node_output="value" />
	<Node group="[]" id="8" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Input name="b" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:824)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:28)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="9" dst_node_input="b" src_node_id="8" src_node_output="result" />
	<Node group="[]" id="9" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Input name="b" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:531)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:28)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="13" dst_node_input="input" src_node_id="9" src_node_output="result" />
	<Node group="[]" id="13" isControl="false" isVisible="false" pipelineFactor="0.0" type="NodeReinterpret">
		<Input name="input" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="hwBits(1)" />
		<Text>&lt;{HWRawBits:1}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:514)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:28)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="12" dst_node_input="a" src_node_id="13" src_node_output="output" />
	<Node group="[]" id="10" isControl="true" isVisible="false" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="io_r_force_disabled" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>Scalar input (io_r_force_disabled)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:514)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:28)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
		<Name>io_r_force_disabled</Name>
	</Node>
	<Edge dst_node_id="11" dst_node_input="a" src_node_id="10" src_node_output="io_r_force_disabled" />
	<Node group="[]" id="11" isControl="true" isVisible="false" pipelineFactor="0.0" type="NodeNot">
		<Input name="a" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:514)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:28)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="14" dst_node_input="input" src_node_id="11" src_node_output="result" />
	<Node group="[]" id="14" isControl="true" isVisible="false" pipelineFactor="0.0" type="NodeReinterpret">
		<Input name="input" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="hwBits(1)" />
		<Text>&lt;{HWRawBits:1}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:514)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:28)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="12" dst_node_input="b" src_node_id="14" src_node_output="output" />
	<Node group="[]" id="12" isControl="false" isVisible="false" pipelineFactor="0.0" type="NodeAnd">
		<Input name="a" type="hwBits(1)" />
		<Input name="b" type="hwBits(1)" />
		<Output latency="0" name="result" type="hwBits(1)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:514)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:28)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="15" dst_node_input="input" src_node_id="12" src_node_output="result" />
	<Node group="[]" id="15" isControl="false" isVisible="false" pipelineFactor="0.0" type="NodeReinterpret">
		<Input name="input" type="hwBits(1)" />
		<Output latency="0" name="output" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:1, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:514)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:28)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="16" dst_node_input="enable" src_node_id="15" src_node_output="output" />
	<Node group="[]" id="16" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeInput">
		<Input name="enable" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="5" name="data" type="hwFloat(8, 24)" />
		<Text>Input(r)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:514)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:28)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
		<Name>r</Name>
	</Node>
	<Edge dst_node_id="21" dst_node_input="b" src_node_id="16" src_node_output="data" />
	<Node group="[]" id="21" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="hwFloat(8, 24)" />
		<Input name="b" type="hwFloat(8, 24)" />
		<Output latency="12" name="result" type="hwFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:775)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:33)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="48" dst_node_input="input" src_node_id="21" src_node_output="result" />
	<Edge dst_node_id="32" dst_node_input="data" src_node_id="21" src_node_output="result" />
	<Node group="[]" id="32" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOutput">
		<Input name="output_control" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Input name="data" type="hwFloat(8, 24)" />
		<Text>Output(output)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:645)
nebstream.NebStreamKernel.&lt;init&gt;(NebStreamKernel.maxj:38)
nebstream.NebStreamManager.main(NebStreamManager.maxj:21)</OriginStackTrace>
		<Name>output</Name>
	</Node>
	<Node group="[]" id="37" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:339)
nebstream.NebStreamManager.main(NebStreamManager.maxj:31)</OriginStackTrace>
		<Value>1</Value>
	</Node>
	<Edge dst_node_id="38" dst_node_input="load" src_node_id="37" src_node_output="value" />
	<Node group="[]" id="56" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:339)
nebstream.NebStreamManager.main(NebStreamManager.maxj:31)</OriginStackTrace>
		<Value>1</Value>
	</Node>
	<Edge dst_node_id="35" dst_node_input="enable" src_node_id="56" src_node_output="value" />
	<Node group="[]" id="34" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwOffsetFix(49, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:339)
nebstream.NebStreamManager.main(NebStreamManager.maxj:31)</OriginStackTrace>
		<Value>1000000000000000000000000000000000000000000000000</Value>
	</Node>
	<Edge dst_node_id="35" dst_node_input="max" src_node_id="34" src_node_output="value" />
	<Node group="[]" id="35" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="hwOffsetFix(49, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="hwOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:339)
nebstream.NebStreamManager.main(NebStreamManager.maxj:31)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="36" dst_node_input="input" src_node_id="35" src_node_output="count" />
	<Node group="[]" id="36" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="hwOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="1" name="output" type="hwOffsetFix(48, 0, UNSIGNED)" />
		<Text>stream offset: 1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:339)
nebstream.NebStreamManager.main(NebStreamManager.maxj:31)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="38" dst_node_input="data" src_node_id="36" src_node_output="output" />
	<Node group="[]" id="38" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeOutputMappedReg">
		<Input name="load" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Input name="data" type="hwOffsetFix(48, 0, UNSIGNED)" />
		<Text>Scalar output (current_run_cycle_count)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:339)
nebstream.NebStreamManager.main(NebStreamManager.maxj:31)</OriginStackTrace>
		<Name>current_run_cycle_count</Name>
	</Node>
	<Node group="[]" id="55" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:339)
nebstream.NebStreamManager.main(NebStreamManager.maxj:31)</OriginStackTrace>
		<Value>1</Value>
	</Node>
	<Edge dst_node_id="41" dst_node_input="enable" src_node_id="55" src_node_output="value" />
	<Node group="[]" id="40" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwOffsetFix(49, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:339)
nebstream.NebStreamManager.main(NebStreamManager.maxj:31)</OriginStackTrace>
		<Value>1000000000000000000000000000000000000000000000000</Value>
	</Node>
	<Edge dst_node_id="41" dst_node_input="max" src_node_id="40" src_node_output="value" />
	<Node group="[]" id="41" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="hwOffsetFix(49, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="hwOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:339)
nebstream.NebStreamManager.main(NebStreamManager.maxj:31)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="44" dst_node_input="a" src_node_id="41" src_node_output="count" />
	<Node group="[]" id="43" isControl="true" isVisible="false" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="run_cycle_count" type="hwOffsetFix(48, 0, UNSIGNED)" />
		<Text>Scalar input (run_cycle_count)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:339)
nebstream.NebStreamManager.main(NebStreamManager.maxj:31)</OriginStackTrace>
		<Name>run_cycle_count</Name>
	</Node>
	<Edge dst_node_id="44" dst_node_input="b" src_node_id="43" src_node_output="run_cycle_count" />
	<Node group="[]" id="44" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="hwOffsetFix(48, 0, UNSIGNED)" />
		<Input name="b" type="hwOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:339)
nebstream.NebStreamManager.main(NebStreamManager.maxj:31)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="42" dst_node_input="start" src_node_id="44" src_node_output="result" />
	<Node group="[]" id="42" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeFlush">
		<Input name="start" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>flush on trigger</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.DFEManager.build(DFEManager.java:339)
nebstream.NebStreamManager.main(NebStreamManager.maxj:31)</OriginStackTrace>
	</Node>
</Graph>
